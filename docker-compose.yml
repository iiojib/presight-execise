services:
  app:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    env_file: .env

  db:
    image: postgres:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}
      interval: 2s
      timeout: 5s
      retries: 10

  nginx:
    image: nginx:latest
    restart: unless-stopped
    env_file: .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./nginx/build:/etc/nginx/templates
      - ./client/dist:/usr/app

  migrator:
    image: migrate/migrate
    volumes:
      - ./migrations/:/migrations
    env_file: .env
    command: "-path=/migrations/ -database postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}?sslmode=disable up"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres-data:

networks:
  default:
    name: "app"

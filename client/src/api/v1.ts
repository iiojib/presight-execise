/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/jobs/{sessionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a job */
        post: operations["createJob"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stream": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Stream text */
        get: operations["streamText"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/persons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List persons */
        get: operations["listPersons"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/persons/top-nationalities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List top nationalities */
        get: operations["listTopNationalities"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/persons/top-hobbies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List top hobbies */
        get: operations["listTopHobbies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Job: {
            /** Format: uuid */
            id: string;
            session_id: string;
            /** @enum {string} */
            status: "pending" | "completed";
            result?: string;
        };
        Person: {
            /** Format: uuid */
            id: string;
            /** Format: uri */
            avatar: string;
            first_name: string;
            last_name: string;
            age: number;
            nationality: string;
            hobbies: string[];
        };
    };
    responses: never;
    parameters: {
        /** @description Search term to filter persons by name */
        PersonListSearch: string;
        /** @description Filter persons by nationality */
        PersonListNationalities: string[];
        /** @description Filter persons by hobbies */
        PersonListHobbies: string[];
        /** @description Page number for pagination */
        PaginationPage: number;
        /** @description Number of items per page for pagination */
        PaginationLimit: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    createJob: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                sessionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Job created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Job"];
                };
            };
        };
    };
    streamText: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A stream of text */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
        };
    };
    listPersons: {
        parameters: {
            query?: {
                /** @description Search term to filter persons by name */
                search?: components["parameters"]["PersonListSearch"];
                /** @description Filter persons by nationality */
                nationalities?: components["parameters"]["PersonListNationalities"];
                /** @description Filter persons by hobbies */
                hobbies?: components["parameters"]["PersonListHobbies"];
                /** @description Page number for pagination */
                page?: components["parameters"]["PaginationPage"];
                /** @description Number of items per page for pagination */
                limit?: components["parameters"]["PaginationLimit"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of persons */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Person"][];
                };
            };
        };
    };
    listTopNationalities: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of top nationalities */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    listTopHobbies: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of top hobbies */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
}
